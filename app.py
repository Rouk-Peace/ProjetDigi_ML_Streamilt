import streamlit as st
import pandas as pd
from PIL import Image
from reg import main_reg  # Import de la fonction main depuis reg.py

# Configuration de la page principale
st.set_page_config(page_title="PLAYGROUND ML", layout="wide", page_icon="ü§ñ")

# Chemins vers les images
logo_path = 'C:/Users/ELite/Workspace ML/Projet_streamlit_ML/ProjetDigi_ML_Streamilt/img/Logo_Diginamic.jpg'
background_image_path = "C:/Users/ELite/Workspace ML/Projet_streamlit_ML/ProjetDigi_ML_Streamilt/img/computer-technology-business-website-header.jpg"
team_image_path = 'C:/Users/ELite/Workspace ML/Projet_streamlit_ML/ProjetDigi_ML_Streamilt/img/team work.jpg'

# Chemins vers les banni√®res
banners = {
    "Nail's detection (optionnel)": "C:/Users/ELite/Workspace ML/Projet_streamlit_ML/ProjetDigi_ML_Streamilt/img/roboflow.png",
}

# Chargement des datasets pr√©d√©finis
def load_wine_data():
    return pd.read_csv("C:/Users/ELite/Workspace ML/Projet_streamlit_ML/ProjetDigi_ML_Streamilt/data/vin.csv")

def load_diabetes_data():
    return pd.read_csv("C:/Users/ELite/Workspace ML/Projet_streamlit_ML/ProjetDigi_ML_Streamilt/data/diabete.csv")

# Sidebar: Logo et options
st.sidebar.image(logo_path, width=195)
st.sidebar.title("Sommaire")

# Choix du dataset
dataset_options = ["Vin", "Diab√®te", "T√©l√©verser un fichier CSV"]
dataset_choice = st.sidebar.selectbox("Choisissez un dataset ou t√©l√©versez votre propre fichier :", dataset_options)

if dataset_choice == "Vin":
    data = load_wine_data()
    st.sidebar.success("Dataset 'Vin' charg√© avec succ√®s.")
elif dataset_choice == "Diab√®te":
    data = load_diabetes_data()
    st.sidebar.success("Dataset 'Diab√®te' charg√© avec succ√®s.")
else:
    uploaded_file = st.sidebar.file_uploader("T√©l√©chargez votre fichier CSV", type=["csv"])
    if uploaded_file is not None:
        data = pd.read_csv(uploaded_file)
        st.sidebar.success("Fichier CSV charg√© avec succ√®s !")
    else:
        data = None
        st.sidebar.info("Veuillez t√©l√©charger un fichier CSV pour commencer et tester les fonctionnalit√©s.")

# D√©finition du sommaire dans la sidebar
pages = ["Accueil", "√âquipe", "Classification", "R√©gression", "Nail's detection (optionnel)", "Conclusion"]
page = st.sidebar.radio("Naviguez vers :", pages)

# Affichage de la banni√®re pour chaque page
banner_path = banners.get(page)
if banner_path:
    st.image(banner_path, use_column_width=True)

# Accueil
if page == "Accueil":
    st.title("Playground Machine Learning ü§ñ")
    st.image(background_image_path, use_column_width=True)
    st.write("""
    Bienvenue dans l'application d√©di√©e √† l'analyse et √† la mod√©lisation de donn√©es.
    
    Vous pouvez Naviguez √† l'aide du menu √† gauche pour explorer toutes les sections :
    
    - **Classification** : Explorez diff√©rents mod√®les pour des probl√®mes de classification.
    - **R√©gression** : Analysez des mod√®les de r√©gression pour les pr√©dictions continues.
    - **Nail's detection** (optionnel) : D√©tection d'objets dans des images √† l'aide de mod√®les de vision.
    """)

# √âquipe
elif page == "√âquipe":
    st.title("Pr√©sentation de l'√©quipe")
    
    st.write("""
    Notre √©quipe est compos√©e de passionn√©s de science des donn√©es, chacun ayant un r√¥le cl√© dans la r√©alisation de ce projet.
    Voici les membres de notre √©quipe, leurs sp√©cialit√©s et leurs contributions :
    """)
    
    col1, col2 = st.columns([1, 2])
    
    with col1:
        image = Image.open(team_image_path)
        st.image(image, caption="√âquipe Data_Science", use_column_width=True)

    with col2:
        team_members = {
            "Roukyatou Oumourou : Data Scientist": "https://www.linkedin.com/in/roukayatou-omorou/",
            "Nacer Messaoui : Data Scientist": "https://www.linkedin.com/in/nacer-messaoui/",
            "Issam Harchi : Data Scientist": "https://www.linkedin.com/in/issam-harchi-a939b9100/",
            "Saba Aziri : Data Analyst": "https://www.linkedin.com/in/azirisaba/"
        }
        
        for name, link in team_members.items():
            st.markdown(f"- [{name}]({link})")

# Classification
elif page == "Classification":
    st.title("Classification")
    st.write("Explorez diff√©rentes techniques de classification.")
    
    if data is not None:
        st.write("Aper√ßu du dataset s√©lectionn√© :")
        st.dataframe(data.head())

    # Sous-sections pour Classification
    with st.expander("Pr√©traitement des Donn√©es"):
        st.write("Pr√©traitement des donn√©es pour la classification :")
        
    with st.expander("Analyse et Visualisation"):
        st.write("Visualisation des r√©sultats de classification :")
        
    with st.expander("Mod√©lisation"):
        st.write("Mod√©lisation des donn√©es :")
        
    with st.expander("√âvaluation"):
        st.write("√âvaluation des mod√®les de classification :")

# R√©gression
elif page == "R√©gression":
    st.title("R√©gression")
    st.write("Explorez diff√©rentes techniques de r√©gression.")

    if data is not None:
        st.write("Aper√ßu du dataset s√©lectionn√© :")
        st.dataframe(data.head())
        
        # D√©finir X et y pour la r√©gression
        X = data.drop(columns=['target'])  # Assurez-vous que 'target' est bien la colonne de la variable cible
        y = data['target']
        
        # Appel de la fonction main() depuis le fichier reg.py
        main()

# Nail's detection (optionnel)
elif page == "Nail's detection (optionnel)":
    st.title("Nail's detection")
    st.write("""
    Int√©gration avec Roboflow pour la D√©tection d'Ongles
    """)
    
# Conclusion
elif page == "Conclusion":
    st.title("Conclusion")
    
    st.write("""
    ### M√©thodologie
    Notre projet a √©t√© g√©r√© en utilisant la m√©thodologie Agile, avec des sprints r√©guliers.
    """)
    
# Footer simplifi√©
st.markdown("""
    <style>
    footer {visibility: hidden;}
    .css-12ttj6m {visibility: hidden;}
    </style>
    """, unsafe_allow_html=True)
