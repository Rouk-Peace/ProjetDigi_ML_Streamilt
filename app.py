import streamlit as st
import pandas as pd
from PIL import Image
import io

# Configuration de la page principale
st.set_page_config(page_title="PLAYGROUND ML", layout="wide", page_icon="ü§ñ")

# Chemins vers les images
logo_path = '/Users/sabaaziri/workspace/ ProjetDigi_ML_Streamilt /ProjetDigi_ML_Streamilt/app.py'
background_image_path = "/Users/sabaaziri/workspace/ ProjetDigi_ML_Streamilt /ProjetDigi_ML_Streamilt/img/computer-technology-business-website-header.jpg.jpg"
team_image_path = '/Users/sabaaziri/workspace/ ProjetDigi_ML_Streamilt /ProjetDigi_ML_Streamilt/img/team work.jpg'

# Chemins vers les banni√®res
banners = {
    #"Accueil": "",
    #"√âquipe": "",
    #"Classification": "",
    #"R√©gression": "/Users/sabaaziri/Downloads/regression_banner.jpg",
    "Nail's detection (optionnel)": "/Users/sabaaziri/workspace/ ProjetDigi_ML_Streamilt /ProjetDigi_ML_Streamilt/img/roboflow.png",
    #"Conclusion": "/Users/sabaaziri/Downloads/conclusion_banner.jpg"
}

# Chargement des datasets pr√©d√©finis
def load_wine_data():
    return pd.read_csv("/Users/sabaaziri/workspace/ ProjetDigi_ML_Streamilt /ProjetDigi_ML_Streamilt/data/vin.csv")

def load_diabetes_data():
    return pd.read_csv("/Users/sabaaziri/workspace/ ProjetDigi_ML_Streamilt /ProjetDigi_ML_Streamilt/data/diabete.csv")

# Initialisation de Roboflow
def init_roboflow():
    from roboflow import Roboflow
    rf = Roboflow(api_key="YOUR_ROBOFLOW_API_KEY")
    project = rf.workspace().project("your-project-name")
    return project.version(1).model

# Sidebar: Logo et options
st.sidebar.image(logo_path, width=195)
st.sidebar.title("Sommaire")

# Choix du dataset
dataset_options = ["Vin", "Diab√®te", "T√©l√©verser un fichier CSV"]
dataset_choice = st.sidebar.selectbox("Choisissez un dataset ou t√©l√©versez votre propre fichier :", dataset_options)

if dataset_choice == "Vin":
    data = load_wine_data()
    st.sidebar.success("Dataset 'Vin' charg√© avec succ√®s.")
elif dataset_choice == "Diab√®te":
    data = load_diabetes_data()
    st.sidebar.success("Dataset 'Diab√®te' charg√© avec succ√®s.")
else:
    uploaded_file = st.sidebar.file_uploader("T√©l√©chargez votre fichier CSV", type=["csv"])
    if uploaded_file is not None:
        data = pd.read_csv(uploaded_file)
        st.sidebar.success("Fichier CSV charg√© avec succ√®s !")
    else:
        data = None
        st.sidebar.info("Veuillez t√©l√©charger un fichier CSV pour commencer et tester les fonctionnalit√©s.")

# D√©finition du sommaire dans la sidebar
pages = ["Accueil", "√âquipe", "Classification", "R√©gression", "Nail's detection (optionnel)", "Conclusion"]
page = st.sidebar.radio("Naviguez vers :", pages)

# Affichage de la banni√®re pour chaque page
banner_path = banners.get(page)
if banner_path:
    st.image(banner_path, use_column_width=True)

# Accueil
if page == "Accueil":
    st.title("Playground Machine Learning ü§ñ")
    st.image(background_image_path, use_column_width=True)
    st.write("""
    Bienvenue dans l'application d√©di√©e √† l'analyse et √† la mod√©lisation de donn√©es.
    
    Vous pouvez Naviguez √† l'aide du menu √† gauche pour explorer toutes les sections :
    
    - **Classification** : Explorez diff√©rents mod√®les pour des probl√®mes de classification.
    - **R√©gression** : Analysez des mod√®les de r√©gression pour les pr√©dictions continues.
    - **Nail's detection** (optionnel) : D√©tection d'objets dans des images √† l'aide de mod√®les de vision.
    """)
   
# √âquipe
elif page == "√âquipe":
    st.title("Pr√©sentation de l'√©quipe")
    
    st.write("""
    Notre √©quipe est compos√©e de passionn√©s de science des donn√©es, chacun ayant un r√¥le cl√© dans la r√©alisation de ce projet. Nous avons travaill√© non seulement sur les aspects techniques du machine learning mais aussi sur l'optimisation de l'exp√©rience utilisateur pour rendre cette application aussi intuitive et engageante que possible.

    Voici les membres de notre √©quipe, leurs sp√©cialit√©s et leurs contributions :
    """)
    
    col1, col2 = st.columns([1, 2])
    
    with col1:
        image = Image.open(team_image_path)
        st.image(image, caption="√âquipe Data_Science", use_column_width=True)

    with col2:
        
        team_members = {
            "Roukyatou Oumourou : Data Scientist": "https://www.linkedin.com/in/roukayatou-omorou/",
            "Nacer Messaoui : Data Scientist": "https://www.linkedin.com/in/nacer-messaoui/",
            "Issam Harchi : Data Scientist": "https://www.linkedin.com/in/issam-harchi-a939b9100/",
            "Saba Aziri : Data Analyst": "https://www.linkedin.com/in/azirisaba/"
        }
        
        for name, link in team_members.items():
            st.markdown(f"- [{name}]({link})")
    
    st.write("""
    ### Contributions et Tests 
    
    Chaque membre de notre √©quipe a jou√© un r√¥le crucial dans le d√©veloppement technique ainsi que dans l'optimisation de l'interface utilisateur et de l'exp√©rience utilisateur :

    - **Roukyatou Oumourou** a dirig√© les efforts en science des donn√©es pour cr√©er des mod√®les de classification et de r√©gression robustes. Elle a √©galement contribu√© √† l'optimisation des visualisations pour rendre les r√©sultats plus accessibles et compr√©hensibles.
    - **Nacer Messaoui** a travaill√© sur le d√©veloppement des algorithmes de machine learning et a supervis√© l'int√©gration des mod√®les dans l'application. Il a √©galement assur√© la performance des mod√®les en les testant avec divers jeux de donn√©es.
    - **Issam Harchi** a √©t√© responsable de l'√©valuation des mod√®les et de l'am√©lioration de leur pr√©cision. Il a √©galement contribu√© √† l'optimisation de l'interface utilisateur pour une meilleure exp√©rience.
    - **Saba Aziri** a supervis√© la mise en ≈ìuvre de l'interface utilisateur et a int√©gr√© des √©l√©ments de design interactifs pour rendre l'application visuellement attrayante et facile √† utiliser. Il a √©galement ajout√© des fonctionnalit√©s amusantes pour am√©liorer l'interaction.


    """)



# Classification
elif page == "Classification":
    st.title("Classification")
    st.write("Explorez diff√©rentes techniques de classification.")
    
    if data is not None:
        st.write("Aper√ßu du dataset 'Vin' :")
        st.dataframe(data.head())
        st.write("""
        **Description du dataset vin selectionnez le csv vin pour la classification :**
        """)
        if st.button("Lancer une classification"):
            st.write("Entra√Ænement du mod√®le de classification...")
            # Ajoutez ici le code pour entra√Æner un mod√®le de classification
            # Exemple: utiliser un mod√®le de classification depuis scikit-learn

# R√©gression
elif page == "R√©gression":
    st.title("R√©gression")
    st.write("Analysez et mod√©lisez les donn√©es √† l'aide de techniques de r√©gression.")
    
    if data is not None:
        st.write("Aper√ßu des donn√©es :")
        st.dataframe(data.head())
        st.write("""
        **Description du dataset Diabete selectionnez le csv diabete pour la regression :**
        """)
        if st.button("Lancer une r√©gression"):
            st.write("Entra√Ænement du mod√®le de r√©gression...")
            # Ajoutez ici le code pour entra√Æner un mod√®le de r√©gression
            # Exemple: utiliser un mod√®le de r√©gression depuis scikit-learn

# Nail's detection (optionnel)
elif page == "Nail's detection (optionnel)":
    st.title("Nail's detection")
    
    st.write("""
    ### Int√©gration avec Roboflow pour la D√©tection d'Ongles
    
    Dans le cadre de ce projet, nous avons int√©gr√© **Roboflow**, une plateforme puissante pour la cr√©ation et le d√©ploiement de mod√®les de vision par ordinateur. Roboflow simplifie le processus de formation de mod√®les de d√©tection d'objets en fournissant des outils conviviaux pour annoter des images, entra√Æner des mod√®les et d√©ployer des solutions de d√©tection en temps r√©el.
    
    Pour notre t√¢che sp√©cifique, nous avons utilis√© Roboflow pour d√©velopper un mod√®le capable de d√©tecter des ongles dans des images. Vous pouvez t√©l√©charger une image ci-dessous pour tester la d√©tection d'objets et voir comment le mod√®le fonctionne.
    """)
    
    


# Conclusion
elif page == "Conclusion":
    st.title("Conclusion")
    
    st.write("""
    ### M√©thodologie
    Notre projet a √©t√© g√©r√© en utilisant la m√©thodologie Agile, qui nous a permis de travailler de mani√®re it√©rative et incr√©mentale. Nous avons organis√© des sprints pour d√©finir des objectifs clairs et avons r√©guli√®rement √©valu√© nos progr√®s pour nous assurer que nous restions sur la bonne voie.

    ### Outils
    - **Gestion de projet :** Nous avons utilis√© GitHub pour le suivi des t√¢ches, la gestion des versions, et la collaboration entre les membres de l'√©quipe. Les issues et les pull requests nous ont aid√©s √† organiser le travail et √† r√©viser les contributions.
    - **D√©veloppement :** Nous avons utilis√© des environnements de d√©veloppement int√©gr√©s (IDE) comme PyCharm et VSCode pour √©crire et tester notre code.
    - **Visualisation des donn√©es :** Pour la visualisation et l'analyse des donn√©es, nous avons utilis√© des biblioth√®ques Python comme Matplotlib, Seaborn et Plotly.
    - **Machine Learning :** Nous avons utilis√© des biblioth√®ques telles que Scikit-Learn et TensorFlow pour l'impl√©mentation et l'√©valuation de nos mod√®les de Machine Learning.
    - **D√©tection d'objets :** Nous avons int√©gr√© Roboflow pour la d√©tection d'objets dans les images.

    ### Algorithmes Utilis√©s
    - **Classification :** Nous avons explor√© des mod√®les de classification comme la r√©gression logistique, les for√™ts al√©atoires (Random Forest) et les machines √† vecteurs de support (SVM).
    - **R√©gression :** Nous avons utilis√© des algorithmes de r√©gression tels que la r√©gression lin√©aire et la r√©gression Ridge pour pr√©dire des valeurs continues.
    - **D√©tection d'objets :** Pour le projet de d√©tection d'objets, nous avons int√©gr√© des mod√®les pr√©-entra√Æn√©s de d√©tection d'objets comme YOLO (You Only Look Once) via Roboflow.

    ### Perspectives
    - **Am√©lioration des Mod√®les :** Nous pr√©voyons d'exp√©rimenter avec d'autres algorithmes de Machine Learning pour am√©liorer les performances des mod√®les.
    - **Sources de Donn√©es :** L'int√©gration de nouvelles sources de donn√©es nous permettra de rendre nos mod√®les plus robustes et polyvalents.
    - **D√©ploiement :** La prochaine √©tape est le d√©ploiement de nos mod√®les en production, √©ventuellement via une API pour des pr√©dictions en temps r√©el.
    """)

# Footer simplifi√©
st.markdown("""
    <style>
    footer {visibility: hidden;}
    .css-12ttj6m {visibility: hidden;}
    </style>
    """, unsafe_allow_html=True)

